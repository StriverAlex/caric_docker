<launch>
    <!-- size of map, change the size in x, y, z according to your application -->
    <arg name="map_size_x" value="160.0" />
    <arg name="map_size_y" value="200.0" />
    <arg name="map_size_z" value="100.0" />

    <!-- topic of your odometry such as VIO or LIO -->
    <arg name="odom_topic" value="ground_truth/odometry" />
    <arg name="boundingbox_path"
        value="$(find caric_mission)/models/crane/bounding_boxes/box_description.yaml" />

    <!-- Launch the gazebo simulator -->
    <!-- <include file="$(find caric_mission)/launch/run_crane.launch" /> -->

    <!-- <node pkg="rviz" type="rviz" name="rviz_main" args="-d $(find exploration_manager)/config/swarm_mbs.rviz" /> -->
    
    <!-- ppcom communicate -->
    <node name="jurong_ppcom_talker" type="ppcom_talker_node" pkg="test_temporarily">
        <param name="drone_name" value="jurong" />
    </node>

    <node name="raffles_ppcom_talker" type="ppcom_talker_node" pkg="test_temporarily">
        <param name="drone_name" value="raffles" />
    </node>

    <node name="changi_ppcom_talker" type="ppcom_talker_node" pkg="test_temporarily">
        <param name="drone_name" value="changi" />
    </node>

    <node name="sentosa_ppcom_talker" type="ppcom_talker_node" pkg="test_temporarily">
        <param name="drone_name" value="sentosa" />
    </node>

    <node name="nanyang_ppcom_talker" type="ppcom_talker_node" pkg="test_temporarily">
        <param name="drone_name" value="nanyang" />
    </node>

    <node name="gcs_ppcom_talker" type="gcs_talker_node" pkg="test_temporarily">
        <param name="drone_name" value="gcs" />
    </node>


    <group ns="jurong">

        <arg name="namespace" default="jurong" />

        <!-- main algorithm params -->
        <include file="$(find exploration_manager)/launch/algorithm_explorer_crane.xml">
            <arg name="drone_name" value="$(arg namespace)" />

            <arg name="map_size_x_" value="$(arg map_size_x)" />
            <arg name="map_size_y_" value="$(arg map_size_y)" />
            <arg name="map_size_z_" value="$(arg map_size_z)" />

            <arg name="depth_topic" value="/pcl_render_node/depth" />
            <arg name="sensor_pose_topic" value="/$(arg namespace)/sensor_pose" />
            <arg name="odometry_topic" value="/$(arg namespace)/$(arg odom_topic)" />
            <arg name="cloud_topic" value="/$(arg namespace)/cloud_inW" />
            <arg name="servo_pose_topic" value="/$(arg namespace)/servo/pose" />

            <!-- maximum velocity and acceleration the drone will reach -->
            <arg name="max_vel" value="3.0" />
            <arg name="max_acc" value="2.0" />

            <arg name="boundingbox_path" value="$(arg boundingbox_path)" />

            <arg name="is_inspect" value="false"/>

        </include>

    </group>

    <group ns="raffles">

        <arg name="namespace" default="raffles" />

        <!-- main algorithm params -->
        <include file="$(find exploration_manager)/launch/algorithm_explorer_crane.xml">
            <arg name="drone_name" value="$(arg namespace)" />

            <arg name="map_size_x_" value="$(arg map_size_x)" />
            <arg name="map_size_y_" value="$(arg map_size_y)" />
            <arg name="map_size_z_" value="$(arg map_size_z)" />

            <arg name="depth_topic" value="/pcl_render_node/depth" />
            <arg name="sensor_pose_topic" value="/$(arg namespace)/sensor_pose" />
            <arg name="odometry_topic" value="/$(arg namespace)/$(arg odom_topic)" />
            <arg name="cloud_topic" value="/$(arg namespace)/cloud_inW" />
            <arg name="servo_pose_topic" value="/$(arg namespace)/servo/pose" />

            <!-- maximum velocity and acceleration the drone will reach -->
            <arg name="max_vel" value="3.0" />
            <arg name="max_acc" value="2.0" />

            <arg name="boundingbox_path" value="$(arg boundingbox_path)" />

            <arg name="is_inspect" value="false"/>

        </include>

    </group>

   
    <group ns="nanyang">

        <arg name="namespace" default="nanyang" />

        <!-- main algorithm params -->
        <include file="$(find exploration_manager)/launch/algorithm_inspecter_crane.xml">
            <arg name="drone_name" value="$(arg namespace)" />

            <arg name="map_size_x_" value="$(arg map_size_x)" />
            <arg name="map_size_y_" value="$(arg map_size_y)" />
            <arg name="map_size_z_" value="$(arg map_size_z)" />

            <arg name="depth_topic" value="/pcl_render_node/depth" />
            <arg name="sensor_pose_topic" value="/$(arg namespace)/sensor_pose" />
            <arg name="odometry_topic" value="/$(arg namespace)/$(arg odom_topic)" />
            <arg name="cloud_topic" value="/$(arg namespace)/cloud_inW" />
            <arg name="servo_pose_topic" value="/$(arg namespace)/servo/pose" />

            <!-- maximum velocity and acceleration the drone will reach -->
            <arg name="max_vel" value="1.7" />
            <arg name="max_acc" value="0.8" />

            <arg name="boundingbox_path" value="$(arg boundingbox_path)" />

            <arg name="is_inspect" value="true"/>

        </include>

    </group>
    
        <group ns="changi">

        <arg name="namespace" default="changi" />

        <!-- main algorithm params -->
        <include file="$(find exploration_manager)/launch/algorithm_inspecter_crane.xml">
            <arg name="drone_name" value="$(arg namespace)" />

            <arg name="map_size_x_" value="$(arg map_size_x)" />
            <arg name="map_size_y_" value="$(arg map_size_y)" />
            <arg name="map_size_z_" value="$(arg map_size_z)" />

            <arg name="depth_topic" value="/pcl_render_node/depth" />
            <arg name="sensor_pose_topic" value="/$(arg namespace)/sensor_pose" />
            <arg name="odometry_topic" value="/$(arg namespace)/$(arg odom_topic)" />
            <arg name="cloud_topic" value="/$(arg namespace)/cloud_inW" />
            <arg name="servo_pose_topic" value="/$(arg namespace)/servo/pose" />

            <!-- maximum velocity and acceleration the drone will reach -->
            <arg name="max_vel" value="1.7" />
            <arg name="max_acc" value="0.8" />

            <arg name="boundingbox_path" value="$(arg boundingbox_path)" />

            <arg name="is_inspect" value="true"/>

        </include>

    </group>

    <group ns="sentosa">

        <arg name="namespace" default="sentosa" />

        <!-- main algorithm params -->
        <include file="$(find exploration_manager)/launch/algorithm_inspecter_crane.xml">
            <arg name="drone_name" value="$(arg namespace)" />

            <arg name="map_size_x_" value="$(arg map_size_x)" />
            <arg name="map_size_y_" value="$(arg map_size_y)" />
            <arg name="map_size_z_" value="$(arg map_size_z)" />

            <arg name="depth_topic" value="/pcl_render_node/depth" />
            <arg name="sensor_pose_topic" value="/$(arg namespace)/sensor_pose" />
            <arg name="odometry_topic" value="/$(arg namespace)/$(arg odom_topic)" />
            <arg name="cloud_topic" value="/$(arg namespace)/cloud_inW" />
            <arg name="servo_pose_topic" value="/$(arg namespace)/servo/pose" />

            <!-- maximum velocity and acceleration the drone will reach -->
            <arg name="max_vel" value="1.7" />
            <arg name="max_acc" value="0.8" />

            <arg name="boundingbox_path" value="$(arg boundingbox_path)" />

            <arg name="is_inspect" value="true"/>

        </include>

    </group>

</launch>
  